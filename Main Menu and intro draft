from cProfile import label
import tkinter as tk
from tkinter import *
from tkinter import ttk

from setuptools import Command

#Create Intro Menu
start = Tk()
start.title("Climate and Weather Team 20")
start.geometry('500x320')
start.configure(background="darkgreen")

#Creates Headline for Intro
start1 = ttk.Label(start, text = "Welcome to Weather + Climate", 
          background = 'black', foreground ="white", 
          font = ("Times New Roman", 10))
start1.place(x = 150, y = 10)

start2 = ttk.Label(start, text = "This system is designed to provide data on the weather and climate in liverpool." 
+ "\r\n" + 
"This was designed and created by:"
+ "\r\n" +
"Ryan Hacine-Bacha"
+ "\r\n" +
"Bogdan"
+ "\r\n" +
"Eoin Boyle"
+ "\r\n" +
"Lukas Holba"
+ "\r\n" +
"?"
+ "\r\n" +
"?"
+ "\r\n" +
"Once you hit the start button you will be able to pick out our many features. ",
          background = 'White', foreground ="Black", 
          font = ("Times New Roman", 8))
start2.place(x = 40, y = 35)

#Function for start button
def main ():
    mai = Tk()
    mai.title("Main Menu")
    mai.geometry('500x320')
    mai.configure(background="green")
    start.destroy()
    
    #Label for Main Menu
    mainlabel = ttk.Label(mai, text = "Main Menu", 
          background = 'black', foreground ="white", 
          font = ("Times New Roman", 15))      
    mainlabel.place(x=200, y=10)

    #Option 1
    ml1 = ttk.Label(mai, text = "Temperature", 
          background = 'black', foreground ="white", 
          font = ("Times New Roman", 15))      
    ml1.place(x=200, y=50)

    btn1 = Button(mai,text="Temperature (Degrees F)", width=20, command=op1)
    btn1.place(x=10, y=50)
    
    #Option 2
    ml2 = ttk.Label(mai, text = "Drew Point", 
          background = 'black', foreground ="white", 
          font = ("Times New Roman", 15))      
    ml2.place(x=200, y=100)

    btn2 = Button(mai,text="Drew Point (Degrees F)", width=20, command=op2)
    btn2.place(x=10, y=100)

    #Option 3
    ml3 = ttk.Label(mai, text = "Humidity (%)", 
          background = 'black', foreground ="white", 
          font = ("Times New Roman", 15))      
    ml3.place(x=200, y=150)

    btn3 =Button(mai,text="Humidity (%)", width=20, command=op3)
    btn3.place(x=10, y=150)

    #Option 4
    ml4 = ttk.Label(mai, text = "Wind Speed (mph)", 
          background = 'black', foreground ="white", 
          font = ("Times New Roman", 15))      
    ml4.place(x=200, y=200)
    
    btn4 = Button(mai,text="Wind Speed (mph)", width=20, command=op4)
    btn4.place(x=10, y=200)

    #Option 5
    ml5 = ttk.Label(mai, text = "Pressure (Hg)", 
          background = 'black', foreground ="white", 
          font = ("Times New Roman", 15))      
    ml5.place(x=200, y=250)
    
    btn5 = Button(mai,text="Pressure (Hg)", width=20, command=op5)
    btn5.place(x=10, y=250)
    
    mai.mainloop()

#Adding Function for start Button
bntStart1 = Button(start,text="Click to start", width=15, command=main)
bntStart1.place(x=180, y=285)

#Option 1 Function
def op1 ():
    op1 = Tk()
    op1.title("Temperature (Degrees F)")
    op1.geometry('500x320')
    op1.configure(background="blue")

    ttk.Label(op1, text = "Temperature (Degrees F)", 
          background = 'black', foreground ="white", 
          font = ("Times New Roman", 15)).grid(row = 0, column = 1)

# label max/average/min 
    ttk.Label(op1, text = "Select the Year :",
          font = ("Times New Roman", 10)).grid(column = 0,
          row = 5, padx = 10, pady = 25)  

# Combobox creation
    n = tk.StringVar()
    yearchoosen = ttk.Combobox(op1, width = 27, textvariable = n)

# Adding combobox drop down list
    yearchoosen['values'] = (' 2013',
                         ' 2014',
                         ' 2015',
                          ' 2016',
                          ' 2017',
                          ' 2018',
                          ' 2019',
                          ' 2020',
                          ' 2021',)
    yearchoosen.grid(column = 1, row = 5)
    yearchoosen.current()

# label month
    ttk.Label(op1, text = "Select the Month :",
          font = ("Times New Roman", 10)).grid(column = 0,
          row = 6, padx = 10, pady = 25)

# Combobox creation month
    n = tk.StringVar()
    monthchoosen = ttk.Combobox(op1, width = 27, textvariable = n)
  
# Adding combobox drop down list
    monthchoosen['values'] = (' January', 
                          ' February',
                          ' March',
                          ' April',
                          ' May',
                          ' June',
                          ' July',
                          ' August',
                          ' September',
                          ' October',
                          ' November',
                          ' December')
  
    monthchoosen.grid(column = 1, row = 6)
    monthchoosen.current()

# label year
    ttk.Label(op1, text = "Select the  :",
          font = ("Times New Roman", 10)).grid(column = 0,
          row = 7, padx = 10, pady = 25)  

# Combobox creation
    n = tk.StringVar()
    typevalue = ttk.Combobox(op1, width = 27, textvariable = n)

# Adding combobox drop down list
    typevalue['values'] = (' Minimum ', 
                          ' Average ',
                          ' Maximum ')
    typevalue.grid(column = 1, row = 7)
    typevalue.current()

#Submitbutton function +++++ Function for finding data
    def click ():
     MyLabel=Label(op1, text="Look! I clicked on a Button!!")
     MyLabel.pack

#addbutton 
    Button(op1,text="Submit", width=6, command=click) .grid(row=8,column=1,sticky=W)

#add exit button
    Button(op1,text="Quit", width=6, command=op1.destroy) .grid(row=8,column=2,sticky=W)

    op1.mainloop()

    #Option 2 Function
def op2 ():
    op2 = Tk()
    op2.title("Drew Point (Degrees F)")
    op2.geometry('500x320')
    op2.configure(background="white")

    ttk.Label(op2, text = "Drew Point (Degrees F)", 
          background = 'black', foreground ="white", 
          font = ("Times New Roman", 15)).grid(row = 0, column = 2)

# label max/average/min 
    ttk.Label(op2, text = "Select the Year :",
          font = ("Times New Roman", 10)).grid(column = 0,
          row = 5, padx = 10, pady = 25)  

# Combobox creation
    n = tk.StringVar()
    yearchoosen = ttk.Combobox(op2, width = 27, textvariable = n)

# Adding combobox drop down list
    yearchoosen['values'] = (' 2013',
                         ' 2014',
                         ' 2015',
                          ' 2016',
                          ' 2017',
                          ' 2018',
                          ' 2019',
                          ' 2020',
                          ' 2021',)
    yearchoosen.grid(column = 1, row = 5)
    yearchoosen.current()

# label month
    ttk.Label(op2, text = "Select the Month :",
          font = ("Times New Roman", 10)).grid(column = 0,
          row = 6, padx = 10, pady = 25)

# Combobox creation month
    n = tk.StringVar()
    monthchoosen = ttk.Combobox(op2, width = 27, textvariable = n)
  
# Adding combobox drop down list
    monthchoosen['values'] = (' January', 
                          ' February',
                          ' March',
                          ' April',
                          ' May',
                          ' June',
                          ' July',
                          ' August',
                          ' September',
                          ' October',
                          ' November',
                          ' December')
  
    monthchoosen.grid(column = 1, row = 6)
    monthchoosen.current()

# label year
    ttk.Label(op2, text = "Select the  :",
          font = ("Times New Roman", 10)).grid(column = 0,
          row = 7, padx = 10, pady = 25)  

# Combobox creation
    n = tk.StringVar()
    typevalue = ttk.Combobox(op2, width = 27, textvariable = n)

# Adding combobox drop down list
    typevalue['values'] = (' Minimum ', 
                          ' Average ',
                          ' Maximum ')
    typevalue.grid(column = 1, row = 7)
    typevalue.current()

#Submitbutton function
    def click ():
     MyLabel=Label(op2, text="Look! I clicked on a Button!!")
     MyLabel.pack

#addbutton 
    Button(op2,text="Submit", width=6, command=click) .grid(row=8,column=1,sticky=W)

#add exit button
    Button(op2,text="Quit", width=6, command=op2.destroy) .grid(row=8,column=2,sticky=W)
    
    op2.mainloop()

#Option 3 Function
def op3 ():
    op3 = Tk()
    op3.title("Humidity (%)")
    op3.geometry('500x320')
    op3.configure(background="yellow")
    

    ttk.Label(op3, text = "Humidity (%)", 
          background = 'black', foreground ="white", 
          font = ("Times New Roman", 15)).grid(row = 0, column = 3)

# label max/average/min 
    ttk.Label(op3, text = "Select the Year :",
          font = ("Times New Roman", 10)).grid(column = 0,
          row = 5, padx = 10, pady = 25)  

# Combobox creation
    n = tk.StringVar()
    yearchoosen = ttk.Combobox(op3, width = 27, textvariable = n)

# Adding combobox drop down list
    yearchoosen['values'] = (' 2013',
                         ' 2014',
                         ' 2015',
                          ' 2016',
                          ' 2017',
                          ' 2018',
                          ' 2019',
                          ' 2020',
                          ' 2021',)
    yearchoosen.grid(column = 1, row = 5)
    yearchoosen.current()

# label month
    ttk.Label(op3, text = "Select the Month :",
          font = ("Times New Roman", 10)).grid(column = 0,
          row = 6, padx = 10, pady = 25)

# Combobox creation month
    n = tk.StringVar()
    monthchoosen = ttk.Combobox(op3, width = 27, textvariable = n)
  
# Adding combobox drop down list
    monthchoosen['values'] = (' January', 
                          ' February',
                          ' March',
                          ' April',
                          ' May',
                          ' June',
                          ' July',
                          ' August',
                          ' September',
                          ' October',
                          ' November',
                          ' December')
  
    monthchoosen.grid(column = 1, row = 6)
    monthchoosen.current()

# label year
    ttk.Label(op3, text = "Select the  :",
          font = ("Times New Roman", 10)).grid(column = 0,
          row = 7, padx = 10, pady = 25)  

# Combobox creation
    n = tk.StringVar()
    typevalue = ttk.Combobox(op3, width = 27, textvariable = n)

# Adding combobox drop down list
    typevalue['values'] = (' Minimum ', 
                          ' Average ',
                          ' Maximum ')
    typevalue.grid(column = 1, row = 7)
    typevalue.current()

#Submitbutton function
    def click ():
     MyLabel=Label(op3, text="Look! I clicked on a Button!!")
     MyLabel.pack

#addbutton 
    Button(op3,text="Submit", width=6, command=click) .grid(row=8,column=1,sticky=W)

#add exit button
    Button(op3,text="Quit", width=6, command=op3.destroy) .grid(row=8,column=2,sticky=W)
    
    op3.mainloop()

    #Option 4 Function
def op4 ():
    op4 = Tk()
    op4.title("Wind Speed (mph)")
    op4.geometry('500x320')
    op4.configure(background="red")

    ttk.Label(op4, text = "Wind Speed (mph)", 
          background = 'black', foreground ="white", 
          font = ("Times New Roman", 15)).grid(row = 0, column = 4)

# label max/average/min 
    ttk.Label(op4, text = "Select the Year :",
          font = ("Times New Roman", 10)).grid(column = 0,
          row = 5, padx = 10, pady = 25)  

# Combobox creation
    n = tk.StringVar()
    yearchoosen = ttk.Combobox(op4, width = 27, textvariable = n)

# Adding combobox drop down list
    yearchoosen['values'] = (' 2013',
                         ' 2014',
                         ' 2015',
                          ' 2016',
                          ' 2017',
                          ' 2018',
                          ' 2019',
                          ' 2020',
                          ' 2021',)
    yearchoosen.grid(column = 1, row = 5)
    yearchoosen.current()

# label month
    ttk.Label(op4, text = "Select the Month :",
          font = ("Times New Roman", 10)).grid(column = 0,
          row = 6, padx = 10, pady = 25)

# Combobox creation month
    n = tk.StringVar()
    monthchoosen = ttk.Combobox(op4, width = 27, textvariable = n)
  
# Adding combobox drop down list
    monthchoosen['values'] = (' January', 
                          ' February',
                          ' March',
                          ' April',
                          ' May',
                          ' June',
                          ' July',
                          ' August',
                          ' September',
                          ' October',
                          ' November',
                          ' December')
  
    monthchoosen.grid(column = 1, row = 6)
    monthchoosen.current()

# label year
    ttk.Label(op4, text = "Select the  :",
          font = ("Times New Roman", 10)).grid(column = 0,
          row = 7, padx = 10, pady = 25)  

# Combobox creation
    n = tk.StringVar()
    typevalue = ttk.Combobox(op4, width = 27, textvariable = n)

# Adding combobox drop down list
    typevalue['values'] = (' Minimum ', 
                          ' Average ',
                          ' Maximum ')
    typevalue.grid(column = 1, row = 7)
    typevalue.current()

#Submitbutton function
    def click ():
     MyLabel=Label(op4, text="Look! I clicked on a Button!!")
     MyLabel.pack

#addbutton 
    Button(op4,text="Submit", width=6, command=click) .grid(row=8,column=1,sticky=W)

#add exit button
    Button(op4,text="Quit", width=6, command=op4.destroy) .grid(row=8,column=2,sticky=W)
    
    op4.mainloop()

    #Option 1 Function
def op5 ():
    op5 = Tk()
    op5.title("Pressure (Hg)")
    op5.geometry('500x320')
    op5.configure(background="black")

    ttk.Label(op5, text = "Pressure (Hg)", 
          background = 'black', foreground ="white", 
          font = ("Times New Roman", 15)).grid(row = 0, column = 5)

# label max/average/min 
    ttk.Label(op5, text = "Select the Year :",
          font = ("Times New Roman", 10)).grid(column = 0,
          row = 5, padx = 10, pady = 25)  

# Combobox creation
    n = tk.StringVar()
    yearchoosen = ttk.Combobox(op5, width = 27, textvariable = n)

# Adding combobox drop down list
    yearchoosen['values'] = (' 2013',
                         ' 2014',
                         ' 2015',
                          ' 2016',
                          ' 2017',
                          ' 2018',
                          ' 2019',
                          ' 2020',
                          ' 2021',)
    yearchoosen.grid(column = 1, row = 5)
    yearchoosen.current()

# label month
    ttk.Label(op5, text = "Select the Month :",
          font = ("Times New Roman", 10)).grid(column = 0,
          row = 6, padx = 10, pady = 25)

# Combobox creation month
    n = tk.StringVar()
    monthchoosen = ttk.Combobox(op5, width = 27, textvariable = n)
  
# Adding combobox drop down list
    monthchoosen['values'] = (' January', 
                          ' February',
                          ' March',
                          ' April',
                          ' May',
                          ' June',
                          ' July',
                          ' August',
                          ' September',
                          ' October',
                          ' November',
                          ' December')
  
    monthchoosen.grid(column = 1, row = 6)
    monthchoosen.current()

# label year
    ttk.Label(op5, text = "Select the  :",
          font = ("Times New Roman", 10)).grid(column = 0,
          row = 7, padx = 10, pady = 25)  

# Combobox creation
    n = tk.StringVar()
    typevalue = ttk.Combobox(op5, width = 27, textvariable = n)

# Adding combobox drop down list
    typevalue['values'] = (' Minimum ', 
                          ' Average ',
                          ' Maximum ')
    typevalue.grid(column = 1, row = 7)
    typevalue.current()

#Submitbutton function
    def click ():
     MyLabel=Label(op2, text="Look! I clicked on a Button!!")
     MyLabel.pack

#addbutton 
    Button(op5,text="Submit", width=6, command=click) .grid(row=8,column=1,sticky=W)

#add exit button
    Button(op5,text="Quit", width=6, command=op5.destroy) .grid(row=8,column=2,sticky=W)
    
    op5.mainloop()

start.mainloop()




